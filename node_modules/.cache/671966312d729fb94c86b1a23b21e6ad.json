{"remainingRequest":"/Users/adamliu/vant/node_modules/babel-loader/lib/index.js!/Users/adamliu/vant/src/notice-bar/index.js","dependencies":[{"path":"/Users/adamliu/vant/src/notice-bar/index.js","mtime":1694509704986},{"path":"/Users/adamliu/vant/babel.config.js","mtime":1694509704583},{"path":"/Users/adamliu/vant/node_modules/cache-loader/dist/cjs.js","mtime":1694509793427},{"path":"/Users/adamliu/vant/node_modules/babel-loader/lib/index.js","mtime":1694509794381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlTmFtZXNwYWNlLCBpc0RlZiB9IGZyb20gJy4uL3V0aWxzJzsKaW1wb3J0IHsgZG91YmxlUmFmLCByYWYgfSBmcm9tICcuLi91dGlscy9kb20vcmFmJzsKaW1wb3J0IHsgQmluZEV2ZW50TWl4aW4gfSBmcm9tICcuLi9taXhpbnMvYmluZC1ldmVudCc7CmltcG9ydCBJY29uIGZyb20gJy4uL2ljb24nOwp2YXIgX2NyZWF0ZU5hbWVzcGFjZSA9IGNyZWF0ZU5hbWVzcGFjZSgnbm90aWNlLWJhcicpLAogIGNyZWF0ZUNvbXBvbmVudCA9IF9jcmVhdGVOYW1lc3BhY2VbMF0sCiAgYmVtID0gX2NyZWF0ZU5hbWVzcGFjZVsxXTsKZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29tcG9uZW50KHsKICBtaXhpbnM6IFtCaW5kRXZlbnRNaXhpbihmdW5jdGlvbiAoYmluZCkgewogICAgLy8gZml4IGNhY2hlIGlzc3VlcyB3aXRoIGZvcndhcmRzIGFuZCBiYWNrIGhpc3RvcnkgaW4gc2FmYXJpCiAgICAvLyBzZWU6IGh0dHBzOi8vZ3V3aWkuY29tL2NhY2hlLWlzc3Vlcy13aXRoLWZvcndhcmRzLWFuZC1iYWNrLWhpc3RvcnktaW4tc2FmYXJpLwogICAgYmluZCh3aW5kb3csICdwYWdlc2hvdycsIHRoaXMucmVzZXQpOwogIH0pXSwKICBpbmplY3Q6IHsKICAgIHZhblBvcHVwOiB7CiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0KICB9LAogIHByb3BzOiB7CiAgICB0ZXh0OiBTdHJpbmcsCiAgICBtb2RlOiBTdHJpbmcsCiAgICBjb2xvcjogU3RyaW5nLAogICAgbGVmdEljb246IFN0cmluZywKICAgIHdyYXBhYmxlOiBCb29sZWFuLAogICAgYmFja2dyb3VuZDogU3RyaW5nLAogICAgc2Nyb2xsYWJsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgZGVsYXk6IHsKICAgICAgdHlwZTogW051bWJlciwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogMQogICAgfSwKICAgIHNwZWVkOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDYwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvdzogdHJ1ZSwKICAgICAgb2Zmc2V0OiAwLAogICAgICBkdXJhdGlvbjogMCwKICAgICAgd3JhcFdpZHRoOiAwLAogICAgICBjb250ZW50V2lkdGg6IDAKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgc2Nyb2xsYWJsZTogJ3Jlc2V0JywKICAgIHRleHQ6IHsKICAgICAgaGFuZGxlcjogJ3Jlc2V0JywKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3ZhbnQtdWkvdmFudC9pc3N1ZXMvODYzNAogICAgaWYgKHRoaXMudmFuUG9wdXApIHsKICAgICAgdGhpcy52YW5Qb3B1cC5vblJlb3Blbih0aGlzLnJlc2V0KTsKICAgIH0KICB9LAogIGFjdGl2YXRlZDogZnVuY3Rpb24gYWN0aXZhdGVkKCkgewogICAgdGhpcy5yZXNldCgpOwogIH0sCiAgbWV0aG9kczogewogICAgb25DbGlja0ljb246IGZ1bmN0aW9uIG9uQ2xpY2tJY29uKGV2ZW50KSB7CiAgICAgIGlmICh0aGlzLm1vZGUgPT09ICdjbG9zZWFibGUnKSB7CiAgICAgICAgdGhpcy5zaG93ID0gZmFsc2U7CiAgICAgICAgdGhpcy4kZW1pdCgnY2xvc2UnLCBldmVudCk7CiAgICAgIH0KICAgIH0sCiAgICBvblRyYW5zaXRpb25FbmQ6IGZ1bmN0aW9uIG9uVHJhbnNpdGlvbkVuZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdGhpcy5vZmZzZXQgPSB0aGlzLndyYXBXaWR0aDsKICAgICAgdGhpcy5kdXJhdGlvbiA9IDA7CgogICAgICAvLyB3YWl0IGZvciBWdWUgdG8gcmVuZGVyIG9mZnNldAogICAgICAvLyB1c2luZyBuZXh0VGljayB3b24ndCB3b3JrIGluIGlPUzE0CiAgICAgIHJhZihmdW5jdGlvbiAoKSB7CiAgICAgICAgLy8gdXNlIGRvdWJsZSByYWYgdG8gZW5zdXJlIGFuaW1hdGlvbiBjYW4gc3RhcnQKICAgICAgICBkb3VibGVSYWYoZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXMub2Zmc2V0ID0gLV90aGlzLmNvbnRlbnRXaWR0aDsKICAgICAgICAgIF90aGlzLmR1cmF0aW9uID0gKF90aGlzLmNvbnRlbnRXaWR0aCArIF90aGlzLndyYXBXaWR0aCkgLyBfdGhpcy5zcGVlZDsKICAgICAgICAgIF90aGlzLiRlbWl0KCdyZXBsYXknKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLy8gbm90IGFuIGV4cG9zZWQtYXBpLCBidXQgbWF5IHVzZWQgYnkgc29tZSB1c2VycwogICAgc3RhcnQ6IGZ1bmN0aW9uIHN0YXJ0KCkgewogICAgICB0aGlzLnJlc2V0KCk7CiAgICB9LAogICAgLy8gQGV4cG9zZWQtYXBpCiAgICByZXNldDogZnVuY3Rpb24gcmVzZXQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICB2YXIgZGVsYXkgPSBpc0RlZih0aGlzLmRlbGF5KSA/IHRoaXMuZGVsYXkgKiAxMDAwIDogMDsKICAgICAgdGhpcy5vZmZzZXQgPSAwOwogICAgICB0aGlzLmR1cmF0aW9uID0gMDsKICAgICAgdGhpcy53cmFwV2lkdGggPSAwOwogICAgICB0aGlzLmNvbnRlbnRXaWR0aCA9IDA7CiAgICAgIGNsZWFyVGltZW91dCh0aGlzLnN0YXJ0VGltZXIpOwogICAgICB0aGlzLnN0YXJ0VGltZXIgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgX3RoaXMyJCRyZWZzID0gX3RoaXMyLiRyZWZzLAogICAgICAgICAgd3JhcCA9IF90aGlzMiQkcmVmcy53cmFwLAogICAgICAgICAgY29udGVudCA9IF90aGlzMiQkcmVmcy5jb250ZW50OwogICAgICAgIGlmICghd3JhcCB8fCAhY29udGVudCB8fCBfdGhpczIuc2Nyb2xsYWJsZSA9PT0gZmFsc2UpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgdmFyIHdyYXBXaWR0aCA9IHdyYXAuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7CiAgICAgICAgdmFyIGNvbnRlbnRXaWR0aCA9IGNvbnRlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGg7CiAgICAgICAgaWYgKF90aGlzMi5zY3JvbGxhYmxlIHx8IGNvbnRlbnRXaWR0aCA+IHdyYXBXaWR0aCkgewogICAgICAgICAgZG91YmxlUmFmKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgX3RoaXMyLm9mZnNldCA9IC1jb250ZW50V2lkdGg7CiAgICAgICAgICAgIF90aGlzMi5kdXJhdGlvbiA9IGNvbnRlbnRXaWR0aCAvIF90aGlzMi5zcGVlZDsKICAgICAgICAgICAgX3RoaXMyLndyYXBXaWR0aCA9IHdyYXBXaWR0aDsKICAgICAgICAgICAgX3RoaXMyLmNvbnRlbnRXaWR0aCA9IGNvbnRlbnRXaWR0aDsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSwgZGVsYXkpOwogICAgfQogIH0sCiAgcmVuZGVyOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKICAgIHZhciBoID0gYXJndW1lbnRzWzBdOwogICAgdmFyIHNsb3RzID0gdGhpcy5zbG90cywKICAgICAgbW9kZSA9IHRoaXMubW9kZSwKICAgICAgbGVmdEljb24gPSB0aGlzLmxlZnRJY29uLAogICAgICBvbkNsaWNrSWNvbiA9IHRoaXMub25DbGlja0ljb247CiAgICB2YXIgYmFyU3R5bGUgPSB7CiAgICAgIGNvbG9yOiB0aGlzLmNvbG9yLAogICAgICBiYWNrZ3JvdW5kOiB0aGlzLmJhY2tncm91bmQKICAgIH07CiAgICB2YXIgY29udGVudFN0eWxlID0gewogICAgICB0cmFuc2Zvcm06IHRoaXMub2Zmc2V0ID8gInRyYW5zbGF0ZVgoIiArIHRoaXMub2Zmc2V0ICsgInB4KSIgOiAnJywKICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uICsgJ3MnCiAgICB9OwogICAgZnVuY3Rpb24gTGVmdEljb24oKSB7CiAgICAgIHZhciBzbG90ID0gc2xvdHMoJ2xlZnQtaWNvbicpOwogICAgICBpZiAoc2xvdCkgewogICAgICAgIHJldHVybiBzbG90OwogICAgICB9CiAgICAgIGlmIChsZWZ0SWNvbikgewogICAgICAgIHJldHVybiBoKEljb24sIHsKICAgICAgICAgICJjbGFzcyI6IGJlbSgnbGVmdC1pY29uJyksCiAgICAgICAgICAiYXR0cnMiOiB7CiAgICAgICAgICAgICJuYW1lIjogbGVmdEljb24KICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gUmlnaHRJY29uKCkgewogICAgICB2YXIgc2xvdCA9IHNsb3RzKCdyaWdodC1pY29uJyk7CiAgICAgIGlmIChzbG90KSB7CiAgICAgICAgcmV0dXJuIHNsb3Q7CiAgICAgIH0KICAgICAgdmFyIGljb25OYW1lOwogICAgICBpZiAobW9kZSA9PT0gJ2Nsb3NlYWJsZScpIHsKICAgICAgICBpY29uTmFtZSA9ICdjcm9zcyc7CiAgICAgIH0gZWxzZSBpZiAobW9kZSA9PT0gJ2xpbmsnKSB7CiAgICAgICAgaWNvbk5hbWUgPSAnYXJyb3cnOwogICAgICB9CiAgICAgIGlmIChpY29uTmFtZSkgewogICAgICAgIHJldHVybiBoKEljb24sIHsKICAgICAgICAgICJjbGFzcyI6IGJlbSgncmlnaHQtaWNvbicpLAogICAgICAgICAgImF0dHJzIjogewogICAgICAgICAgICAibmFtZSI6IGljb25OYW1lCiAgICAgICAgICB9LAogICAgICAgICAgIm9uIjogewogICAgICAgICAgICAiY2xpY2siOiBvbkNsaWNrSWNvbgogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgICByZXR1cm4gaCgiZGl2IiwgewogICAgICAiYXR0cnMiOiB7CiAgICAgICAgInJvbGUiOiAiYWxlcnQiCiAgICAgIH0sCiAgICAgICJkaXJlY3RpdmVzIjogW3sKICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgdmFsdWU6IHRoaXMuc2hvdwogICAgICB9XSwKICAgICAgImNsYXNzIjogYmVtKHsKICAgICAgICB3cmFwYWJsZTogdGhpcy53cmFwYWJsZQogICAgICB9KSwKICAgICAgInN0eWxlIjogYmFyU3R5bGUsCiAgICAgICJvbiI6IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljayhldmVudCkgewogICAgICAgICAgX3RoaXMzLiRlbWl0KCdjbGljaycsIGV2ZW50KTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIFtMZWZ0SWNvbigpLCBoKCJkaXYiLCB7CiAgICAgICJyZWYiOiAid3JhcCIsCiAgICAgICJjbGFzcyI6IGJlbSgnd3JhcCcpLAogICAgICAiYXR0cnMiOiB7CiAgICAgICAgInJvbGUiOiAibWFycXVlZSIKICAgICAgfQogICAgfSwgW2goImRpdiIsIHsKICAgICAgInJlZiI6ICJjb250ZW50IiwKICAgICAgImNsYXNzIjogW2JlbSgnY29udGVudCcpLCB7CiAgICAgICAgJ3Zhbi1lbGxpcHNpcyc6IHRoaXMuc2Nyb2xsYWJsZSA9PT0gZmFsc2UgJiYgIXRoaXMud3JhcGFibGUKICAgICAgfV0sCiAgICAgICJzdHlsZSI6IGNvbnRlbnRTdHlsZSwKICAgICAgIm9uIjogewogICAgICAgICJ0cmFuc2l0aW9uZW5kIjogdGhpcy5vblRyYW5zaXRpb25FbmQKICAgICAgfQogICAgfSwgW3RoaXMuc2xvdHMoKSB8fCB0aGlzLnRleHRdKV0pLCBSaWdodEljb24oKV0pOwogIH0KfSk7"},null]}