{"remainingRequest":"/Users/adamliu/works/vant/node_modules/babel-loader/lib/index.js!/Users/adamliu/works/vant/node_modules/get-intrinsic/index.js","dependencies":[{"path":"/Users/adamliu/works/vant/node_modules/get-intrinsic/index.js","mtime":1694509794008},{"path":"/Users/adamliu/works/vant/babel.config.js","mtime":1694509704583},{"path":"/Users/adamliu/works/vant/node_modules/cache-loader/dist/cjs.js","mtime":1694509793427},{"path":"/Users/adamliu/works/vant/node_modules/babel-loader/lib/index.js","mtime":1694509794381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}