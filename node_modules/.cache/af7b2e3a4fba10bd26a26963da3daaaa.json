{"remainingRequest":"/Users/adamliu/vant/node_modules/babel-loader/lib/index.js!/Users/adamliu/vant/node_modules/process/browser.js","dependencies":[{"path":"/Users/adamliu/vant/node_modules/process/browser.js","mtime":1694509793507},{"path":"/Users/adamliu/vant/babel.config.js","mtime":1694509704583},{"path":"/Users/adamliu/vant/node_modules/cache-loader/dist/cjs.js","mtime":1694509793427},{"path":"/Users/adamliu/vant/node_modules/babel-loader/lib/index.js","mtime":1694509794381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gc2hpbSBmb3IgdXNpbmcgcHJvY2VzcyBpbiBicm93c2VyCnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTsKCi8vIGNhY2hlZCBmcm9tIHdoYXRldmVyIGdsb2JhbCBpcyBwcmVzZW50IHNvIHRoYXQgdGVzdCBydW5uZXJzIHRoYXQgc3R1YiBpdAovLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXMKLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYQovLyBmdW5jdGlvbiBiZWNhdXNlIHRyeS9jYXRjaGVzIGRlb3B0aW1pemUgaW4gY2VydGFpbiBlbmdpbmVzLgoKdmFyIGNhY2hlZFNldFRpbWVvdXQ7CnZhciBjYWNoZWRDbGVhclRpbWVvdXQ7CmZ1bmN0aW9uIGRlZmF1bHRTZXRUaW1vdXQoKSB7CiAgdGhyb3cgbmV3IEVycm9yKCdzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7Cn0KZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCgpIHsKICB0aHJvdyBuZXcgRXJyb3IoJ2NsZWFyVGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpOwp9CihmdW5jdGlvbiAoKSB7CiAgdHJ5IHsKICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykgewogICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDsKICAgIH0gZWxzZSB7CiAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0OwogICAgfQogIH0gY2F0Y2ggKGUpIHsKICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0OwogIH0KICB0cnkgewogICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHsKICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0OwogICAgfSBlbHNlIHsKICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gZGVmYXVsdENsZWFyVGltZW91dDsKICAgIH0KICB9IGNhdGNoIChlKSB7CiAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0OwogIH0KfSkoKTsKZnVuY3Rpb24gcnVuVGltZW91dChmdW4pIHsKICBpZiAoY2FjaGVkU2V0VGltZW91dCA9PT0gc2V0VGltZW91dCkgewogICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zCiAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApOwogIH0KICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZAogIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkgewogICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7CiAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApOwogIH0KICB0cnkgewogICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzcwogICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQoZnVuLCAwKTsKICB9IGNhdGNoIChlKSB7CiAgICB0cnkgewogICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHkKICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApOwogICAgfSBjYXRjaCAoZSkgewogICAgICAvLyBzYW1lIGFzIGFib3ZlIGJ1dCB3aGVuIGl0J3MgYSB2ZXJzaW9uIG9mIEkuRS4gdGhhdCBtdXN0IGhhdmUgdGhlIGdsb2JhbCBvYmplY3QgZm9yICd0aGlzJywgaG9wZnVsbHkgb3VyIGNvbnRleHQgY29ycmVjdCBvdGhlcndpc2UgaXQgd2lsbCB0aHJvdyBhIGdsb2JhbCBlcnJvcgogICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7CiAgICB9CiAgfQp9CmZ1bmN0aW9uIHJ1bkNsZWFyVGltZW91dChtYXJrZXIpIHsKICBpZiAoY2FjaGVkQ2xlYXJUaW1lb3V0ID09PSBjbGVhclRpbWVvdXQpIHsKICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9ucwogICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpOwogIH0KICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkCiAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7CiAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7CiAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7CiAgfQogIHRyeSB7CiAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzCiAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0KG1hcmtlcik7CiAgfSBjYXRjaCAoZSkgewogICAgdHJ5IHsKICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseQogICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwobnVsbCwgbWFya2VyKTsKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuCiAgICAgIC8vIFNvbWUgdmVyc2lvbnMgb2YgSS5FLiBoYXZlIGRpZmZlcmVudCBydWxlcyBmb3IgY2xlYXJUaW1lb3V0IHZzIHNldFRpbWVvdXQKICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7CiAgICB9CiAgfQp9CnZhciBxdWV1ZSA9IFtdOwp2YXIgZHJhaW5pbmcgPSBmYWxzZTsKdmFyIGN1cnJlbnRRdWV1ZTsKdmFyIHF1ZXVlSW5kZXggPSAtMTsKZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkgewogIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkgewogICAgcmV0dXJuOwogIH0KICBkcmFpbmluZyA9IGZhbHNlOwogIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7CiAgICBxdWV1ZSA9IGN1cnJlbnRRdWV1ZS5jb25jYXQocXVldWUpOwogIH0gZWxzZSB7CiAgICBxdWV1ZUluZGV4ID0gLTE7CiAgfQogIGlmIChxdWV1ZS5sZW5ndGgpIHsKICAgIGRyYWluUXVldWUoKTsKICB9Cn0KZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHsKICBpZiAoZHJhaW5pbmcpIHsKICAgIHJldHVybjsKICB9CiAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7CiAgZHJhaW5pbmcgPSB0cnVlOwogIHZhciBsZW4gPSBxdWV1ZS5sZW5ndGg7CiAgd2hpbGUgKGxlbikgewogICAgY3VycmVudFF1ZXVlID0gcXVldWU7CiAgICBxdWV1ZSA9IFtdOwogICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikgewogICAgICBpZiAoY3VycmVudFF1ZXVlKSB7CiAgICAgICAgY3VycmVudFF1ZXVlW3F1ZXVlSW5kZXhdLnJ1bigpOwogICAgICB9CiAgICB9CiAgICBxdWV1ZUluZGV4ID0gLTE7CiAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7CiAgfQogIGN1cnJlbnRRdWV1ZSA9IG51bGw7CiAgZHJhaW5pbmcgPSBmYWxzZTsKICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7Cn0KcHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHsKICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7CiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7CiAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTsKICAgIH0KICB9CiAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTsKICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykgewogICAgcnVuVGltZW91dChkcmFpblF1ZXVlKTsKICB9Cn07CgovLyB2OCBsaWtlcyBwcmVkaWN0aWJsZSBvYmplY3RzCmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkgewogIHRoaXMuZnVuID0gZnVuOwogIHRoaXMuYXJyYXkgPSBhcnJheTsKfQpJdGVtLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7CiAgdGhpcy5mdW4uYXBwbHkobnVsbCwgdGhpcy5hcnJheSk7Cn07CnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7CnByb2Nlc3MuYnJvd3NlciA9IHRydWU7CnByb2Nlc3MuZW52ID0ge307CnByb2Nlc3MuYXJndiA9IFtdOwpwcm9jZXNzLnZlcnNpb24gPSAnJzsgLy8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkIHJlZ2V4cCBpc3N1ZXMKcHJvY2Vzcy52ZXJzaW9ucyA9IHt9OwpmdW5jdGlvbiBub29wKCkge30KcHJvY2Vzcy5vbiA9IG5vb3A7CnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wOwpwcm9jZXNzLm9uY2UgPSBub29wOwpwcm9jZXNzLm9mZiA9IG5vb3A7CnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wOwpwcm9jZXNzLnJlbW92ZUFsbExpc3RlbmVycyA9IG5vb3A7CnByb2Nlc3MuZW1pdCA9IG5vb3A7CnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDsKcHJvY2Vzcy5wcmVwZW5kT25jZUxpc3RlbmVyID0gbm9vcDsKcHJvY2Vzcy5saXN0ZW5lcnMgPSBmdW5jdGlvbiAobmFtZSkgewogIHJldHVybiBbXTsKfTsKcHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHsKICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7Cn07CnByb2Nlc3MuY3dkID0gZnVuY3Rpb24gKCkgewogIHJldHVybiAnLyc7Cn07CnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7CiAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTsKfTsKcHJvY2Vzcy51bWFzayA9IGZ1bmN0aW9uICgpIHsKICByZXR1cm4gMDsKfTs="},null]}